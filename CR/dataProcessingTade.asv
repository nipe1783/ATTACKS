clc
clear all


%% Computer Vision
    
    % Latency
    % Time required to send one image of varying size to ground station.
    byte_per_pixel = 3;
    suggested_bandwidth = 64; %kB/s
    figure()
    hold on
    image_size = [360, 480, 720, 1080, 1440];
    packet_size = image_size .* 1 .* byte_per_pixel ./ 1000; %kB
    latency = 1000*packet_size./suggested_bandwidth; %ms
    plot(image_size,latency,'LineWidth',2)
    scatter(image_size,latency,'f','LineWidth',2)
    text(image_size, latency, sprintfc(' %.3f',latency),'Vert','top', 'FontSize',11)
    xlabel('Image size (p)')
    ylabel('Latency (ms)')
    title('Latency of Transmitting an Image at Various Sizes')

    % Throughput Required.
    % Amount of throughput required by the communication in order to
    % satisfy the fps for various image qualities.
    frames = 1:30;
    figure()
    hold on
    for image_size = [360, 480, 720, 1080, 1440]
       packet_size = image_size .* frames .* byte_per_pixel ./ 1000; %kB
       plot(frames, frames * image_size * byte_per_pixel / 1000, "LineWidth", 2)
    end
    xlabel('Frames Per Second')
    ylabel('KB/S')
    title('Required Communication Throughput required for various image trasnfer rates')
    legend('360p', '480p', '720p', '1080p', '1440')

%% Motion Planning:
    
    % Latency
    % Time required to send one UAS state of varying size to ground station.
    n = 50;
    packet_size = (48:n*96)./1000; %kB
    latency = 1000*packet_size./suggested_bandwidth; %ms
    figure()
    hold on
    plot(packet_size,latency,'LineWidth',2)
    scatter([min(packet_size), max(packet_size)],[min(latency), max(latency)],'f','LineWidth',2)
    text([min(packet_size), max(packet_size)], [min(latency), max(latency)], sprintfc(' %.2f',[min(latency), max(latency)]),'Vert','top', 'FontSize',11)
    xlabel('Packet Size (kB)')
    ylabel('Latency (ms)')
    title('Latency of Transmitting a Path')

    % Throughput Required.
    % Amount of throughput required by the communication in order to
    % satisfy the state update per second for various state sizes.
    updates_per_second = 1:30;
    figure()
    hold on
    for packet_size = [48 /1000, 96 / 1000, 2 * 98 /1000, 3 * 98 / 1000]
       plot(frames, frames * packet_size * byte_per_pixel / 1000, "LineWidth", 2)
    end
    xlabel('Updates Per Second')
    ylabel('KB/S')
    title('Required Communication Throughput required for various image trasnfer rates')
    legend('360p', '480p', '720p', '1080p', '1440')
